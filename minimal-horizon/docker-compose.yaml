---
version: '3'

# using fixed ip addresses so opennms config works
# to see all netowrk use docker network ls
# to see config use docker network inspect minimal-minion-kafka_frontend
# note gateway is 172.20.0.1 
networks:
  frontend:
    ipam:
      config:
        - subnet: 172.20.0.0/24


volumes:
  data-postgres: {}
  data-opennms: {}
  data-opennms-cfg: {}

services:
  database:
    image: ${DOCKER_REGISTRY:-docker.io}/postgres:${POSTGRES_VERSION:-13}
    container_name: database
    hostname: database
    environment:
      TZ: ${TIMEZONE:-America/New_York}
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - data-postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 30s
      retries: 3
    networks:
      frontend:
        ipv4_address: 172.20.0.2

  horizon:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_ORG:-opennms}/${HORIZON_OCI:-horizon}:${ONMS_VERSION:-bleeding}
    container_name: horizon
    hostname: horizon
    sysctls:
      net.ipv4.ping_group_range: "0 429496729"
    depends_on:
      - database
    environment:
      TZ: ${TIMEZONE:-America/New_York}
    volumes:
      - ~/.m2/repository:/usr/share/opennms/.m2/repository
      - data-opennms:/opennms-data
      - data-opennms-cfg:/opt/opennms/etc
      - ./container-fs/misc:/opt/opennms/misc
      - ./container-fs/opt/opennms/deploy:/opt/opennms/deploy
      - ./container-fs/opt/opennms-overlay:/opt/opennms-overlay
      - ./container-fs/etc/conf.d/confd.toml:/etc/confd/confd.toml
    command: ["-s"]
    ports:
      - "8101:8101/tcp"
      - "8980:8980/tcp"
      - "10162:1162/udp"
      - "55555:55555/tcp" # pax exam rmi port
      - "1098:1098/tcp" # java.rmi.activation.port rmi server port - for pax exam
    healthcheck:
      test: [ "CMD", "curl", "-f", "-I", "http://localhost:8980/opennms/login.jsp" ]
      interval: 1m
      timeout: 5s
      retries: 3
    networks:
      frontend:
        ipv4_address: 172.20.0.6


  # first snmp container
  cameranetsnmp1:
    image: polinux/snmpd
    container_name: cameranetsnmp1
    hostname: cameranetsnmp1
    volumes:
      - ./snmp/snmpd.conf:/etc/snmp/snmpd.conf
    ports:
      - "11161:161/udp"
    networks:
      frontend:
        ipv4_address: 172.20.0.30

# second snmp container
  cameranetsnmp2:
    image: polinux/snmpd
    container_name: cameranetsnmp2
    hostname: cameranetsnmp2
    volumes:
      - ./snmp/snmpd.conf:/etc/snmp/snmpd.conf
    ports:
      - "11162:161/udp"
    networks:
      frontend:
        ipv4_address: 172.20.0.31

